<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.peragon</groupId>
    <artifactId>percival</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <java.version>17</java.version>
        <mainClass>com.valkyrlabs.ValkyrAI</mainClass>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring-starter-version>3.4.0</spring-starter-version>
        <spring-security-version>6.3.4</spring-security-version>

        <aspectj-maven-plugin-version>1.15.0</aspectj-maven-plugin-version>
        <aspectj.version>1.9.22.1</aspectj.version>
        <aspectj.compliancelevel>15</aspectj.compliancelevel>
        <aspectj-maven-plugin-version>2.2.0</aspectj-maven-plugin-version>
        <swagger-parser-version>2.1.24</swagger-parser-version>
        <swagger-core-version>2.2.16</swagger-core-version>
        <jackson-core-version>2.15.2</jackson-core-version>
        <jackson-databind-nullable-version>0.2.6</jackson-databind-nullable-version>
        <jakarta-annotation-version>3.0.0</jakarta-annotation-version>
        <junit-version>4.13.2</junit-version>
        <jersey-version>2.35</jersey-version>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.1</version>
        <relativePath />
    </parent>

    <name>ThorAPI</name>
    <description>CORE Service Generator</description>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>2.29.39</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- TOO slow.. just add a step to VAI and build with node 
 maybe use this in a non-local environment (CI/CD)?
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.15.1</version>
                <executions>
                    <execution>
                        <id>install node and yarn</id>
                        <goals>
                            <goal>install-node-and-yarn</goal>
                        </goals>
                        <configuration>

                            <yarnVersion>v1.22.19</yarnVersion>
                            <nodeVersion>v23.0.0</nodeVersion>
                            <npmVersion>10.5.0</npmVersion>
                        </configuration>
                    </execution>

                    <execution>
                        <id>yarn ci</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        
                        <configuration>
                            <arguments>ci</arguments>
                            <workingDirectory>src/main/typescript/demo-game</workingDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.basedir}/generated/spring/src/main/</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.4.2</version>

                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>false</addClasspath>
                            <mainClass>com.valkyrlabs.ValkyrAI</mainClass>
                        </manifest>
                    </archive>
                    <outputDirectory>${project.basedir}/generated/spring/lib/</outputDirectory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <includeSystemScope>true</includeSystemScope>
                            <mainClass>com.valkyrlabs.thorapi.ThorAPI</mainClass>
                            <classifier>exec</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <compilerArgs>
                        <arg>-parameters</arg>
                        <arg>-g</arg>
                        <arg>-Xlint</arg>
                    </compilerArgs>
                    <!-- IMPORTANT: otherwise we get method 'aspectOf' not found in final output -->
                    <useIncrementalCompilation>false</useIncrementalCompilation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>aspectj-maven-plugin</artifactId>
                <version>1.15.0</version>
                <configuration>
                    <complianceLevel>${aspectj.compliancelevel}</complianceLevel>
                    <includes>
                        <include>**/*.java</include>
                        <include>**/*.aj</include>
                    </includes>
                    <showWeaveInfo>false</showWeaveInfo>

                </configuration>
                <executions>

                    <execution>
                        <phase>process-classes</phase>
                        <id>aj-compile-classes</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <phase>process-classes</phase>
                        <id>aj-test-compile</id>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <configuration>
                    <propertyFile>src/main/resources/liquibase.properties</propertyFile>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <!-- RELEASE_VERSION -->
                <version>7.5.0</version>
                <!-- /RELEASE_VERSION -->
                <executions>
                    <execution>
                        <id>api.service</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/openapi/api-out.yaml</inputSpec>
                            <artifactId>valkyrai-api</artifactId>
                            <groupId>com.valkyrlabs</groupId>
                            <artifactVersion>${project.version}</artifactVersion>

                            <generatorName>spring</generatorName>
                            <library>spring-boot</library>

                            <apiPackage>com.valkyrlabs.api</apiPackage>
                            <modelPackage>com.valkyrlabs.model</modelPackage>

                            <generateModelTests>true</generateModelTests>
                            <generateModelDocumentation>true</generateModelDocumentation>
                            <generateApiTests>true</generateApiTests>
                            <generateApiDocumentation>true</generateApiDocumentation>

                            <templateResourcePath>
                                ${project.basedir}/src/main/resources/templates/JavaSpring
                            </templateResourcePath>
                            <configurationFile>
                                ${project.basedir}/src/main/resources/generator.config.yaml
                            </configurationFile>


                            <output>${project.basedir}/generated/spring</output>

                            <configOptions>
                                <name>ValkyrAI</name>

                                <developerOrganization>Valkyr Labs Inc</developerOrganization>
                                <artifactDescription>ValkyrAI API</artifactDescription>

                                <useResponseEntity>true</useResponseEntity>
                                <returnSuccessCode>true</returnSuccessCode>
                                <snapshotVersion>true</snapshotVersion>
                                <cleanupOutput>true</cleanupOutput>

                                <useJakartaEe>true</useJakartaEe>
                                <dateLibrary>java8</dateLibrary> <!-- Default-->

                                <delegatePattern>true</delegatePattern>
                                <performBeanValidation>true</performBeanValidation>
                                <skipDefaultInterface>false</skipDefaultInterface>
                                <async>true</async>

                                <useBeanValidation>true</useBeanValidation>
                                <swagger2AnnotationLibrary>true</swagger2AnnotationLibrary>
                            </configOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>api.client</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/openapi/api-out.yaml</inputSpec>

                            <artifactId>valkyrai-api</artifactId>
                            <groupId>com.valkyrlabs</groupId>
                            <artifactVersion>${project.version}</artifactVersion>


                            <generatorName>typescript-redux-query</generatorName>
                            <templateResourcePath>
                                ${project.basedir}/src/main/resources/templates/typescript-redux-query
                            </templateResourcePath>

                            <apiPackage>api</apiPackage>
                            <modelPackage>model</modelPackage>

                            <generateModelTests>true</generateModelTests>

                            <output>
                                ${project.basedir}/src/main/typescript/demo-game/src/thor
                            </output>
                            <!-- WOW. amazing.-->
                            <configurationFile>
                                ${project.basedir}/src/main/resources/templates/typescript-redux-query/generator.config.yaml
                            </configurationFile>

                            <!-- <library>npm</library> -->
                            <configOptions>
                                <sortModelPropertiesByRequiredFlag>true</sortModelPropertiesByRequiredFlag>
                                <withInterfaces>true</withInterfaces>
                                <nullSafeAdditionalProps>true</nullSafeAdditionalProps>

                                <title>valkyrai-api-client</title>
                                <name>ValkyrAI Client</name>
                                <withInterfaces>true</withInterfaces>
                                <sortModelPropertiesByRequiredFlag>true</sortModelPropertiesByRequiredFlag>
                                <cleanupOutput>true</cleanupOutput>

                                <artifactDescription>ValkyrAI API Client</artifactDescription>
                                <async>true</async>

                                <developerOrganization>VALKYR LABS INC</developerOrganization>

                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- Nice but not necessary at this time
                   <plugin>
                    <groupId>com.iluwatar.urm</groupId>
                    <artifactId>urm-maven-plugin</artifactId>
                    <version>2.1.1</version>
                    <configuration>
                        <outputDirectory>${project.basedir}/target</outputDirectory>
                        <packages>
                            <param>com.valkyrlabs</param>
                        </packages>
                        <ignores>
                        </ignores>
                        <includeMainDirectory>true</includeMainDirectory>
                        <includeTestDirectory>false</includeTestDirectory>
                        <presenter>mermaid</presenter>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>process-classes</phase>
                            <goals>
                                <goal>map</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                -->
        </plugins>

    </build>

    <dependencies>

        <!-- GH section -->
        <dependency>
            <groupId>org.kohsuke</groupId>
            <artifactId>github-api</artifactId>
            <version>1.326</version>
        </dependency>

        <dependency>
            <groupId>xmlpull</groupId>
            <artifactId>xmlpull</artifactId>
            <version>1.1.3.1</version>
        </dependency>

        <!-- AWS section -->

        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>ecs</artifactId>
        </dependency>

        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-lambda-java-core</artifactId>
            <version>1.2.3</version>
        </dependency>

        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>lambda</artifactId>
        </dependency>

        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3</artifactId>
        </dependency>

        <dependency>
            <groupId>com.valkyrlabs</groupId>
            <artifactId>valkyrai-api</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/valkyrai-api-1.0-SNAPSHOT.jar</systemPath>
        </dependency>
        <!-- ThorAPI locally built jar DO NOT DEPLOY -->
        <dependency>
            <groupId>com.valkyrlabs.thorapi</groupId>
            <artifactId>generator</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/generator-1.0-SNAPSHOT-exec.jar</systemPath>
        </dependency>
        <!-- AWS section -->
        <dependency>
            <groupId>com.valkyrlabs</groupId>
            <artifactId>valkyrai-api</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/valkyrai-api-1.0-SNAPSHOT.jar</systemPath>
        </dependency>

        <!--  Publish to Maven Central -->
        <dependency>
            <groupId>com.valkyrlabs</groupId>
            <artifactId>OpenXLS</artifactId>
            <version>1.0-SNAPSHOT</version>
            <scope>system</scope>
            <systemPath>${project.basedir}/lib/OpenXLS-12.0.1-SNAPSHOT.jar</systemPath>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>0.10.2</version>
        </dependency>

        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-core</artifactId>
            <version>${swagger-core-version}</version> <!-- Ensure you use a version that supports OpenAPI 3.1 -->
        </dependency>

        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-models</artifactId>
            <version>${swagger-core-version}</version> <!-- Same version as swagger-core -->
        </dependency>

        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-core-version}</version> <!-- Same version as swagger-core -->
        </dependency>


        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-integration</artifactId>
            <version>2.1.10</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
        </dependency>

        <!-- SLF4J API -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!-- Log4j2 Implementation for SLF4J -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>

        <!-- Log4j2 Core and API -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>


        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-to-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-messaging</artifactId>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjtools</artifactId>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <!-- deal with warning about duplicate JSON -->
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-aop</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.skyscreamer</groupId>
                    <artifactId>jsonassert</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-acl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-crypto</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>

        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20240303</version>
        </dependency>

        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
            <version>2.2</version>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.3.2</version>
        </dependency>
        <!-- Handlebars for templating -->

        <dependency>
            <groupId>com.github.jknack</groupId>
            <artifactId>handlebars</artifactId>
            <version>4.4.0</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-client</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-core</artifactId>
        </dependency>

        <!--
        <dependency>
            <groupId>org.springframework.security.oauth</groupId>
            <artifactId>spring-security-oauth2</artifactId>
            <version>2.5.2.RELEASE</version>
        </dependency>
-->

        <!-- LEGACY DEPS -->
        <!-- API, java.xml.bind module -->
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
        </dependency>

        <!-- Runtime, com.sun.xml.bind module -->
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
        </dependency>

        <dependency>
            <groupId>io.swagger.parser.v3</groupId>
            <artifactId>swagger-parser</artifactId>
            <version>${swagger-parser-version}</version>
        </dependency>

        <dependency>
            <groupId>io.swagger.parser.v3</groupId>
            <artifactId>swagger-parser-project</artifactId>
            <version>${swagger-parser-version}</version>
            <type>pom</type>
        </dependency>

        <dependency>
            <groupId>io.swagger.parser.v3</groupId>
            <artifactId>swagger-parser-core</artifactId>
            <version>${swagger-parser-version}</version>
        </dependency>

        <dependency>
            <groupId>io.swagger.parser.v3</groupId>
            <artifactId>swagger-parser-v2-converter</artifactId>
            <version>${swagger-parser-version}</version>
        </dependency>


        <!-- HTTP client: jersey-client -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
        </dependency>


        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.json.bind</groupId>
            <artifactId>jakarta.json.bind-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-websocket</artifactId>
        </dependency>

        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>0.12.6</version>
        </dependency>

        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>0.12.6</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>0.12.6</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>0.12.6</version>
        </dependency>
        <!-- JSON processing: jackson -->

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>

        <!-- Jackson Databind -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>

        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>openapi-generator-cli</artifactId>
            <version>7.10.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>openapi-generator</artifactId>
            <version>7.10.0</version>
        </dependency>

        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>${jackson-databind-nullable-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
        </dependency>

        <!--
        <dependency>
            <groupId>com.github.scribejava</groupId>
            <artifactId>scribejava-apis</artifactId>
            <version>${scribejava-apis-version}</version>
        </dependency>
-->
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.connectors</groupId>
            <artifactId>jersey-apache-connector</artifactId>
        </dependency>
        <dependency>
            <groupId>com.brsanthu</groupId>
            <artifactId>migbase64</artifactId>
            <version>2.2</version>
        </dependency>
        <!-- test dependencies -->


        <!-- H2 Database -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>3.0.0</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>3.0.0</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>4.12.0</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>

        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <!-- LEGACY DEPS -->

        <!-- a default caching impl -->
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
        </dependency>

        <!-- allows us to use application.yaml configs -->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
        </dependency>
    </dependencies>

</project>