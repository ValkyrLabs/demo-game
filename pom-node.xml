<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.valkyrlabs.thorapi</groupId>
    <artifactId>generator-node</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <mainClass>ValkyrAI</mainClass>

        <spring-starter-version>3.4.0</spring-starter-version>
        <spring-security-version>6.3.4</spring-security-version>
        <spring-version>6.1.14</spring-version>

        <aspectj.version>1.9.22.1</aspectj.version>
        <aspectj.compliancelevel>15</aspectj.compliancelevel>
        <asoectj-maven-plugin-version>2.2.0</asoectj-maven-plugin-version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <swagger-parser-version>2.1.24</swagger-parser-version>
        <swagger-core-version>2.2.16</swagger-core-version>
        <jersey-version>2.35</jersey-version>
        <jackson-core-version>2.15.2</jackson-core-version>
        <jackson-databind-nullable-version>0.2.6</jackson-databind-nullable-version>
        <jakarta-annotation-version>3.0.0</jakarta-annotation-version>
        <junit-version>4.13.2</junit-version>
        <scribejava-apis-version>8.3.3</scribejava-apis-version>
    </properties>

    <name>ThorAPI</name>
    <description>CORE Service Generator</description>

    <build>

        <plugins>
            <!-- TOO slow.. just add a step to VAI and build with node 
 maybe use this in a non-local environment (CI/CD)?
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.15.1</version>
                <executions>
                    <execution>
                        <id>install node and yarn</id>
                        <goals>
                            <goal>install-node-and-yarn</goal>
                        </goals>
                        <configuration>

                            <yarnVersion>v1.22.19</yarnVersion>
                            <nodeVersion>v23.0.0</nodeVersion>
                            <npmVersion>10.5.0</npmVersion>
                        </configuration>
                    </execution>

                    <execution>
                        <id>yarn ci</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        
                        <configuration>
                            <arguments>ci</arguments>
                            <workingDirectory>src/main/typescript/valkyr_labs_dev</workingDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        -->

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>3.3.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.valkyrlabs.thorapi.ThorAPI</mainClass>
                            <classifier>exec</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>4.3.5</version>
                <configuration>
                    <propertyFile>src/main/resources/liquibase.properties</propertyFile>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <!-- RELEASE_VERSION -->
                <version>7.5.0</version>
                <!-- /RELEASE_VERSION -->
                <executions>
                    <execution>
                        <id>api.client</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/openapi/api-out.yaml</inputSpec>
                            <!--
                            <templateResourcePath>${project.basedir}/src/main/resources/templates/typescript-redux-query</templateResourcePath>
                            -->
                            <artifactId>percival-api</artifactId>
                            <groupId>com.valkyrlabs</groupId>
                            <artifactVersion>${project.version}</artifactVersion>


                            <generatorName>typescript-redux-query</generatorName>
                            <templateResourcePath>
                                ${project.basedir}/src/main/resources/templates/typescript-redux-query
                            </templateResourcePath>

                            <apiPackage>api</apiPackage>
                            <modelPackage>model</modelPackage>

                            <generateModelTests>true</generateModelTests>

                            <output>
                                ${project.basedir}/src/main/typescript/valkyr_labs_dev/src/thor
                            </output>
                            <!-- WOW. amazing.-->
                            <configurationFile>
                                ${project.basedir}/src/main/resources/templates/typescript-redux-query/generator.config.yaml
                            </configurationFile>

                            <!-- <library>npm</library> -->
                            <configOptions>
                                <sortModelPropertiesByRequiredFlag>true</sortModelPropertiesByRequiredFlag>
                                <withInterfaces>true</withInterfaces>
                                <nullSafeAdditionalProps>true</nullSafeAdditionalProps>

                                <title>percival-api-client</title>
                                <name>Percival Client</name>
                                <withInterfaces>true</withInterfaces>
                                <sortModelPropertiesByRequiredFlag>true</sortModelPropertiesByRequiredFlag>
                                <cleanupOutput>true</cleanupOutput>

                                <!--
                                <parentArtifactId>thorapi-parent</parentArtifactId>
                                <parentGroupId>com.valkyrlabs.thorapi</parentGroupId>
                                <parentVersion>0.9.00-SNAPSHOT</parentVersion>
                                -->

                                <artifactDescription>Percival API</artifactDescription>
                                <async>true</async>

                                <developerOrganization>VALKYR LABS INC</developerOrganization>

                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- Nice but not necessary at this time
                   <plugin>
                    <groupId>com.iluwatar.urm</groupId>
                    <artifactId>urm-maven-plugin</artifactId>
                    <version>2.1.1</version>
                    <configuration>
                        <outputDirectory>${project.basedir}/target</outputDirectory>
                        <packages>
                            <param>com.valkyrlabs</param>
                        </packages>
                        <ignores>
                        </ignores>
                        <includeMainDirectory>true</includeMainDirectory>
                        <includeTestDirectory>false</includeTestDirectory>
                        <presenter>mermaid</presenter>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>process-classes</phase>
                            <goals>
                                <goal>map</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                -->
        </plugins>

    </build>

    <dependencies>


        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-core</artifactId>
            <version>${swagger-core-version}</version> <!-- Ensure you use a version that supports OpenAPI 3.1 -->
        </dependency>

        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-models</artifactId>
            <version>${swagger-core-version}</version> <!-- Same version as swagger-core -->
        </dependency>

        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-core-version}</version> <!-- Same version as swagger-core -->
        </dependency>


        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-integration</artifactId>
            <version>2.1.10</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>${jackson-core-version}</version>
        </dependency>

        <!-- SLF4J API -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.16</version>
        </dependency>

        <!-- Log4j2 Implementation for SLF4J -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>2.24.1</version>
        </dependency>

        <!-- Log4j2 Core and API -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.24.1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.24.1</version>
        </dependency>

        <!-- Handlebars for templating -->

        <dependency>
            <groupId>com.github.jknack</groupId>
            <artifactId>handlebars</artifactId>
            <version>4.4.0</version>
        </dependency>


        <dependency>
            <groupId>io.swagger.parser.v3</groupId>
            <artifactId>swagger-parser</artifactId>
            <version>${swagger-parser-version}</version>
        </dependency>

        <dependency>
            <groupId>io.swagger.parser.v3</groupId>
            <artifactId>swagger-parser-project</artifactId>
            <version>${swagger-parser-version}</version>
            <type>pom</type>
        </dependency>

        <dependency>
            <groupId>io.swagger.parser.v3</groupId>
            <artifactId>swagger-parser-core</artifactId>
            <version>${swagger-parser-version}</version>
        </dependency>

        <dependency>
            <groupId>io.swagger.parser.v3</groupId>
            <artifactId>swagger-parser-v2-converter</artifactId>
            <version>${swagger-parser-version}</version>
        </dependency>


        <!-- allows us to use application.yaml configs -->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>2.3</version>
        </dependency>
    </dependencies>

</project>